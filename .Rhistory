getwd()
load("../../data/weight_year_pred.RData")
ggpubr 
library(ggpubr) 
install.packages("ggpubr") 
install.packages("vctrs") 
q()
n
?scale_fill_viridis
?scale_fill_viridis
    ggplot(year_pred, aes(x = Year, y = yhat)) +
    ##geom_ribbon(aes(ymin = lwr, ymax = upr, fill = Lake), , alpha = 0.4) +
    geom_line(aes(colour = Lake), lwd = 0.5) +
    xlab("Year") +
    ylab("Standardised count per fyke net")

q()
n
q()
n
lake
lake <- lakes[]1
lake <- lakes[1]
    resids <- residuals(simulationOutput, quantileFunction = qnorm)
res
q()
n
getwd()
install.packages("paletteer")
head(lcdat)
table(lcdat$guard)
wdat$Year
wdat$Year
dat$Year
lakes
t(lakes)
t(t(lakes))
cat(t(t(lakes)))
lake <- "Feeagh"
form
plot(f0, pages = 1)
?plot.gam
plot(f0, pages = 1, scale = 0)
summary(f0)
plot(sub_dat$Year, sub_dat$guard)
table(sub_dat$Year, sub_dat$guard)
plot(table(sub_dat$Year, sub_dat$guard))
summary(f0)
lake
lakes
lake <- lakes[2]
form
plot(f0, pages = 1, scale = 0)
summary(f0)
lake <- lakes[3]
form
plot(f0, pages = 1, scale = 0)
lake
summary(f0)
lake <- lakes[3]
lake
lake <- lakes[4]
lake
form
plot(f0, pages = 1, scale = 0)
summary(f0)
lake <- lakes[1]
lake
form
plot(f0, pages = 1, scale = 0)
summary(f0)
lake
form
plot(f0, pages = 1, scale = 0)
summary(f0)
lake
lake <- lakes[2]
lake
form
plot(f0, pages = 1, scale = 0)
summary(f0)
lake
lake <- lakes[3]
plot(f0, pages = 1, scale = 0)
summary(f0)
lake
4.97e-05
par("scipen")
options("scipen")
4.97e-05 / 0.0000497
lake <- lakes[4]
lake
form
lake
plot(f0, pages = 1, scale = 0)
summary(f0)
count_fits
count_fits
lapply(count_fits, AIC)
lapply(weight_fits, AIC)
for(lake in lakes){
    print(lake)
    ## remove October sampling, which was out of the sampling season 
    sub_dat <- subset(lcdat, Lake == lake & Month != "Oct" & !is.na(count))
    sub_dat <- droplevels(sub_dat)
    ## sum to zero contrasts - doesn't matter currently
    contrasts(sub_dat$fSite) <- contr.sum
    if(lake == "Feeagh"){
        form <- as.formula(count ~
                               s(Year, m = 1, bs = bs_year) +
                               s(doy, m = 1, bs = bs_other) +
                               s(fSite, bs = "re") +
                               s(trap_depth, m = 1, bs = bs_other) +
                               s(trap_gradient, m = 1, bs = bs_other) +
                               s(trap_number, by = survey, m = 1, bs = bs_other) +
                               s(fchain, bs = "re") +
                               guard +
                               offset(log(Effort)))
    }
    if(lake == "BOH"){
        form <- as.formula(count ~ 
                               s(Year, m = 1, bs = bs_year) +
                               s(doy, k = 5, m = 1, bs = bs_other) +
                               s(fSite, bs = "re", k= 3) +
                               s(trap_depth, m = 1, bs = bs_other) +
                               s(trap_gradient, k = 5, m = 1, bs = bs_other) +
                               s(trap_number, m = 1, bs = bs_other) +
                               s(fchain, bs = "re") +
                               guard +
                               offset(log(Effort)))
    }
    if(lake %in% c("Furnace", "Bunaveela")){
        form <- as.formula(count ~ 
                               s(Year, m = 1, bs = bs_year) +
                               s(doy, k = 5, m = 1, bs = bs_other) +
                               s(fSite, bs = "re", k= 3) +
                               s(trap_depth, k= 5, m = 1, bs = bs_other) +
                               s(trap_gradient, k= 5, m = 1, bs = bs_other) +
                               s(trap_number, k= 5, m = 1, bs = bs_other) +
                               s(fchain, bs = "re") +
                               guard +
                               offset(log(Effort)))
    }
    ## fit the model
    f0 <- gam(form,
              select = TRUE,
              method = "REML",
              family = nb(),
              data = sub_dat)
    ##gam.check(f0)
    ##
    count_fits[[lake]] <- f0
}
lapply(count_fits, AIC)
}
lapply(weight_fits, AIC)
lake <- "Feeagh"
aggregate(count ~ Year, mean, data = sub_dat)
plot(aggregate(count ~ Year, mean, data = sub_dat))
py0
names(lcdat)
names(lcdat)
py0
rm(list = ls())
q()
n
